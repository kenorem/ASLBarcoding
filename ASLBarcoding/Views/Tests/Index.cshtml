@model IEnumerable<ASLBarcoding.Models.Test>

@*@model PagedList.IPagedList<ASLBarcoding.Models.Test>
@using PagedList.Mvc;*@ 
@{
    ViewBag.Title = "Test List";
}

<h2>Test List</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>


<table class="table">
    @*<tr>
        <th>
            Test Name*@
    @*@Html.DisplayNameFor(model => model.Name)*@
    @*</th>
        <th>
            Test Type*@
    @*@Html.DisplayNameFor(model => model.TestType.Name)*@
    @*</th>
        <th>
            @Html.DisplayNameFor(model => model.Cost)
        </th>

        <th>
            OIC*@
    @*@Html.DisplayNameFor(model => model.AspNetUser.UserName)*@
    @*</th>
            <th></th>
        </tr>*@


    @*@if (Model.PageCount > 0)
    {*@
        <tr>
            <th>
                @Html.ActionLink("Test Name", "Index", new { sortOrder = ViewBag.TestNameSortParm })
            </th>
            <th>
                @Html.ActionLink("Test Type", "Index", new { sortOrder = ViewBag.TestTypeSortParm })
            </th>
            <th>
                @Html.ActionLink("Cost", "Index", new { sortOrder = ViewBag.CostSortParm })
            </th>
            <th>
                @Html.ActionLink("OiC", "Index", new { sortOrder = ViewBag.OiCNameSortParm })
            </th>
            <th></th>
        </tr>
    @*}
    else
    {
        <tr>
            <td colspan="9">
                <em>No records found!</em>
            </td>
        </tr>
    }*@

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TestType.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cost)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AspNetUser.LastName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>

    }

    @*Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
                new { page, sortOrder = ViewBag.CurrentSort }))*@
</table>